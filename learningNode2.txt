16、自用笔记本（拯救者 R7000）上git相关信息：
       user.name：zhaoqi229；
       user.email：1980615850@qq.com。

17、从github上拉取代码：git clone。
      git clone git@github.com:github用户名/仓库名.git。
      注意：https如何clone代码：
               ①从github上生成https链接。例：https://github.com/doubleQi27/learningGit.git；
               ②建立本地目录以保存仓库文件；
               ③git clone https链接（可能会需要输入账号密码才能访问，权限管理的）。

18、分支管理：分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。

即：保持主分支代码的完整性，不影响代码测试和使用，而在分支上进行自己的开发，无论进度如何，不影响正常代码的完整性。

19、创建分支，并切换到该分支：
      ①git checkout -b 自定义分支名称；
       注意：-b指令表示创建并切换到新分支，故上述命令相当于如下②：
      ②git branch 自定义分支名；（创建）
         git checkout 自定义分支名；（切换）
      ③git branch：查看当前所有分支。其中，当前使用的分支前有“*”标记，颜色与其它分支不一样。
      ④切换分支：git checkout 分支名。
      注意：新版本git分支切换也可以使用switch——git switch -c 要切换到的分支

20、合并分支。
       ①先切换至目标分支——合并到哪个分支；
       ②使用git merge 想要合并的分支  命令来进行分支合并。

21、删除分支：git branch -d 要删除的分支名。

总结18~21：鼓励多用分支，分支的使用很重要。

22、解决分支冲突。master为git默认的主分支，当建立新的分支，并在其上进行commit操作，切换回master分支，再次进行提交时，可能会出现分支冲突，git无法自动合并分支，此时，必须首先解决冲突，冲突解决之后，再提交，完成合并。
注意：使用git log --graph可以查看分支合并图。

23、分支合并时，git会使用fast forward模式，在该模式下，删除分支后，分支信息会丢失。如果强制禁用fast forward模式，则git会在merge时生成一个新的commit，由此，可从分支历史上看出分支信息。
注意：强制禁止fast forward模式合并：git merge --no-ff -m 分支合并信息 想合并的分支名。

24、多人协作分支管理策略：

