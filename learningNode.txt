1、git安装：https://blog.csdn.net/mukes/article/details/115693833

2、配置用户名及密码（邮箱）：
    git config --global user.name "输入用户名"
    git config --global user.email "输入邮箱名"

3、建立git仓库：
     命令行创建仓库目录——>pwd：查看仓库目录——>进入该目录——>git init：使该目录成为git管理的仓库（生成隐藏文件夹.git，不要随意修改该文件，避免破坏仓库）。
    注意：
    ①所有版本控制系统只能跟踪文本文件的改动，对于二进制文件，无法跟踪文件内容变化，只能知道文件大小的变化。word是二进制格式，所以word是无法用版本控制管理的。需要用版本控制的内容，最好以纯文本的方式编写文件。
    ②不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。

4、git添加文件——>git add。注意：必须在git仓库里添加文件才是有效行为，否则无法完成文件添加。

5、git commit：提交修改说明，便于自己或其他人查看——>git commit -m 修改说明。

6、git status：让我们时刻掌握仓库的状态，查看仓库内的文件是否被修改过，没有被修改过不会有特殊提示；若git仓库中的文件被修改，则会出现红色“modified”字样，并提示该是该是否提交（commit）。git status命令只能提示仓库中的文件是否被修改，但无法告知具体修改的内容。

7、git diff：查看修改了哪些地方，即difference。

8、修改文件并提交的总体流程：
     修改文件（必须是git仓库中的文件）——>git status（查看状态）/git diff+文件全名（查看修改内容）——>git add 文件全名——>git commit -m 修改说明。

9、git log  （--pretty=oneline）：查看提交日志。

10、版本回退：git reset --指定回退到的版本。
      HEAD：当前版本；
      HEAD^：上一个版本；
      HEAD^^：上上一个版本；
      HEAD~n：往上n个版本。
      HEAD commit ID：到指定commit ID的版本，这个就无所谓过去还是未来了。commit ID不用写全，git会根据输入的前几位自动去匹配。（前提是当前 git bash窗口一直处于打开状态）。

11、 如果关掉了git bash，失去了commit id，如何回复最新版本：
        git reflog 命令可帮助找回修改内容对应的commit id。

12、版本回退测试内容。